name: Publish release Openinsight-proj

on:
  # Disable auto-run, once we sunset 1.x components we might go back to auto-release.
  #
  # release:
  #   types:
  #     - published

  workflow_dispatch:
    inputs:
      # Disable version inputs for now, the build always uses the latest tags.
      #
      # version_v1:
      #   required: true
      #   type: string
      #   description: Version number for 1.x components. Don't include a leading `v`.

      # version_v2:
      #   required: true
      #   type: string
      #   description: Version number for 2.x components. Don't include a leading `v`.

      dry_run:
        required: true
        type: boolean
        description: Do a test run. It will only build one platform (for speed) and will not push artifacts.

      overwrite:
        required: true
        type: boolean
        description: Allow overwriting artifacts.

jobs:
  publish-release:
    permissions:
      contents: write
      deployments: write
    if: github.repository == 'openinsight-proj/jaeger'
    runs-on: ubuntu-latest

    steps:
    - name: Clean up some disk space
      # We had an issue where the workflow was running out of disk space,
      # because it downloads so many Docker images for different platforms.
      # Here we delete some stuff from the VM that we do not use.
      # Inspired by https://github.com/jlumbroso/free-disk-space.
      run: |
        sudo rm -rf /usr/local/lib/android || true
        df -h /

    - uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        submodules: true
    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: 1.24.x
    - uses: ./.github/actions/setup-node.js
    - name: Determine parameters
      id: params
      run: |
        docker_flags=()
        if [[ "${{ inputs.dry_run }}" == "true" ]]; then
          docker_flags=("${docker_flags[@]}" -l -p linux/amd64)
          echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
        else
          echo "platforms=$(make echo-platforms)" >> $GITHUB_OUTPUT
        fi
        if [[ "${{ inputs.overwrite }}" == "true" ]]; then
          docker_flags=("${docker_flags[@]}" -o)
        fi
        echo "docker_flags=${docker_flags[@]}" >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT

    - name: Export BRANCH variable and validate it is a semver
      # Many scripts depend on BRANCH variable. We do not want to
      # use ./.github/actions/setup-branch here because it may set
      # BRANCH=main when the workflow is triggered manually.
      #
      # TODO this currently utilizes 1.x version tag, which is ok for v1
      # binaries, but for tools/utils we may need to change in the future.
      run: |
        BRANCH=$(make echo-v1)
        echo Validate that the latest tag ${BRANCH} is in semver format
        echo ${BRANCH} | grep -E '^v[0-9]+.[0-9]+.[0-9]+$'
        echo "BRANCH=${BRANCH}" >> ${GITHUB_ENV}

    - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build, test, and publish v2 image
      run: |
        BRANCH=$(make echo-v2) \
        bash scripts/build/build-all-in-one-image-proj.sh \
          ${{ steps.params.outputs.docker_flags }} \
          v2